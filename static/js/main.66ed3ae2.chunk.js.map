{"version":3,"sources":["components/weather/Weather.js","components/form/Form.js","App.js","index.js"],"names":["Weather","props","className","city","weatherIcon","description","temp","low","high","highLowTemp","temp_high","temp_low","Form","error","onSubmit","loadweather","type","name","autoComplete","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","api_call","json","response","console","log","setState","sys","convertTemp","main","temp_max","temp_min","weather","get_WeatherIcon","id","state","undefined","icon","thunderstorm","drizzle","rain","snow","atmosphere","clear","clouds","icons","rangeId","this","Math","floor","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66ed3ae2.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nconst Weather = (props) => {\n    return (\n        <div className=\"container text-light\">\n            <div className=\"cards pt-4\">\n                <h1 className=\"py-4\">{props.city}</h1>\n                <h5 className=\"py-4\">\n                    <i className={`wi ${props.weatherIcon} display-1`} />\n                </h5>\n\n                <h4 className=\"py-4 capitalize\">{props.description}</h4>\n\n                {props.temp ? (<h1 className=\"py-4\">{props.temp}&deg;</h1>) : null}\n\n                {/* Show high and low temp */}\n                {highLowTemp(props.temp_high, props.temp_low)}\n\n                {props.temp ? (\n                    <h3>\n                        <span className=\"px-4\">High</span>\n                        <span className=\"px-4\">Low</span>                \n                    </h3>\n    \n                ) : null}\n            </div> \n        </div>\n    );\n};\n\nfunction highLowTemp(low, high) {\n    if(low && high) {\n        return(\n            <h3>\n                <span className=\"px-4\">{low}&deg;</span>\n                <span className=\"px-4\">{high}&deg;</span>\n            </h3>\n        );\n    };\n\n};\n\nexport default Weather;","import React from 'react';\nimport './style.css';\n\nconst Form = props => {\n    return(\n        <div className='container'>\n            <div>{props.error ? error() : null}</div>\n            <form onSubmit={props.loadweather}>\n                <div className='row'>\n                    <div className='col-md-3 offset-md-2'>\n                        <input \n                            type='text' \n                            className='form-control' \n                            name='city' \n                            autoComplete='off' \n                            placeholder='City'\n                        />\n                    </div>\n                    <div className='col-md-3'>\n                        <input \n                            type='text' \n                            className='form-control' \n                            name='country' \n                            autoComplete='off' \n                            placeholder='Country'\n                        />\n                    </div>\n                    <div className='col-md-3 mt-md-0 py-2 text-md-left'>\n                        <button className='btn text-light'>\n                            Get Weather\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nfunction error(){\n    return(\n        <div className='alert alert-danger mx-5 role=\"alert\"'>\n            Please enter city and country\n        </div>\n    )\n}\n\nexport default Form;","import React from 'react';\nimport Weather from './components/weather/Weather';\nimport Form from './components/form/Form';\n\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst API_key = 'a1e3b3c298370700698105fb435bbe64';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      temp: undefined,\n      temp_high: undefined,\n      temp_low: undefined,\n      description: '',\n      error: false\n    };\n    \n    this.weatherIcon = {\n      thunderstorm:'wi-thunderstorm',\n      drizzle: 'wi-sleet',\n      rain: 'wi-storm-showers',\n      snow: 'wi-snow',\n      atmosphere: 'wi-fog',\n      clear: 'wi-day-sunny',\n      clouds: 'wi-day-fog'\n    };\n  };\n\n  get_WeatherIcon(icons, rangeId) {\n    switch(true){\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon:this.weatherIcon.thunderstorm})\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({icon:this.weatherIcon.drizzle})\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({icon:this.weatherIcon.rain})\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({icon:this.weatherIcon.snow})\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({icon:this.weatherIcon.atmosphere})\n        break;\n      case rangeId === 800:\n        this.setState({icon:this.weatherIcon.clear})\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({icon:this.weatherIcon.clouds})\n        break;\n      default:\n        this.setState({icon:this.weatherIcon.clouds})\n    };\n  };\n\n  convertTemp(temp){\n    let newTemp =  Math.floor((temp - 273.15)*1.8) + 32 \n    return newTemp;\n  };\n\n  getWeather = async(e) => {\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if(city && country) {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`);\n\n      const response = await api_call.json()\n  \n      console.log(response)\n  \n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        temp: this.convertTemp(response.main.temp),\n        temp_high: this.convertTemp(response.main.temp_max),\n        temp_low: this.convertTemp(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false\n      });\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id)\n  \n    }else {\n      this.setState({error: true})\n    };\n  };\n\n  render(){\n    return(\n      <div className='App'>\n        <Form \n          loadweather={this.getWeather}\n          error={this.state.error}\n        />\n        <Weather \n          city={this.state.city} \n          country={this.state.country}\n          temp={this.state.temp}\n          temp_high={this.state.temp_high}\n          temp_low={this.state.temp_low}\n          description={this.state.description}\n          weatherIcon={this.state.icon}\n        />\n    </div>\n    )\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}